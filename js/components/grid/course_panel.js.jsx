export class CoursePanel extends React.Component {
  render() {
    const courses = this.props.selectedCourses.map(
      course => <Course key={course}
                        selectedLectures={this.props.selectedLectures}
                        courseCode={course}
                        removeCourse={this.props.removeCourse}
                        addSelectedLecture={this.props.addSelectedLecture}
                        removeSelectedLecture={this.removeSelectedLecture}/>)

    return (
      <div id="course-select-wrapper" className="col-md-2 col-xs-6">
        <ul className="trapScroll-enabled" id="course-select">
          <li id="clear-all" key="clear-all-grid" onClick={this.props.clearCourses}>
            <h3>Clear All</h3>
          </li>
          {courses}
        </ul>
      </div>
    );
  }
}

class Course extends React.Component {
  constructor(props) {
    super(props);
    this.toggleSelect = this.toggleSelect.bind(this);
    this.removeCourse = this.removeCourse.bind(this);
    this.state = {
      selected: false
    }
  }

  componentDidMount() {
    //.ajax.data option add additional data to the requestcan be given as an object with parameters and values to submit,
    // jQuery's ajax function just appends data to the URL as URL parameters for GET requests
    // Below the deprecated method of retrieving the course information
    // var course;
    // $.ajax({
    //     url: 'course',
    //     dataType: 'json',
    //     data: {name : courseCode},
    //     async: false,
    //     success: function (data) {
    //         course = data;
    //     },
    //     error: function () {
    //         throw 'No course file';
    //     }
    // });
    // console.log(course);

    fetch(
      'course?name=' + this.props.courseCode, // url to which the AJAX request is sent to
    )
    .then(response => response.json()) //datatype
    .then(data => {
        console.log(data)
      // Parse the information
      // Check data.fall/spring/yearSession
      // loop through data.fall/spring/yearSession.lectures: check for section(the section code) to remove duplicates
      // check times: timeField[0] is day index, timeField[1] is hour (there's an extra one for every half hour)
      // {courseCode: , F: [lectureObject, lectureObject, lectureObjext], S:[], Y:[] }
    });
  }

  toggleSelect() {
    this.setState({selected: !this.state.selected})
  }

  removeCourse() {
    this.props.removeCourse(this.props.courseCode);
  }

  render() {
    return (
      <li key={this.props.courseCode} id={this.props.courseCode + "-li"} >
        <h3>
          <div className="icon-div">
              <img src="static/res/ico/delete.png" className="close-icon" onClick={this.removeCourse}/>
          </div>
          <div onClick={this.toggleSelect}>
            {this.props.courseCode}
          </div>
        </h3>
        { this.state.selected &&
          <div className="sections ui-accordion-header"
                id={"ui-accordion-" + this.props.courseCode + "-li-panel-0"}>
            <SectionList courseCode={this.props.courseCode}
                          section="Y"
                          lectures={this.props.courseSections.Y}
                          addSelectedLecture={this.props.addSelectedLecture}
                          selectedLectures={this.props.selectedLectures}
                          removeSelectedLecture={this.removeSelectedLecture}/>
            <SectionList courseCode={this.props.courseCode}
                          section="F"
                          lectures={this.props.courseSections.F}
                          addSelectedLecture={this.props.addSelectedLecture}
                          selectedLectures={this.props.selectedLectures}
                          removeSelectedLecture={this.removeSelectedLecture}/>
            <SectionList courseCode={this.props.courseCode}
                          section="S" lectures={this.props.courseSections.S}
                          addSelectedLecture={this.props.addSelectedLecture}
                          selectedLectures={this.props.selectedLectures}
                          removeSelectedLecture={this.removeSelectedLecture}/>
          </div>
        }
      </li>
    )
  }
}

class SectionList extends React.Component {
  render() {
    // Remove duplicates from the sessions array generated by the Course object.
    // Note: this was used to parse information from the deprecated Course object
    let lectures = this.props.lectures;
    lectures = lectures.filter((lecture, index, lectures) => {
      return lectures.map(lect => lect.id).indexOf(lecture.id) == index
    });
    const lectureSections = lectures.map(
      lecture => <LectureSection key={lecture.id}
                                  section={this.props.section}
                                  courseCode={this.props.courseCode}
                                  lectureCode={lecture.name}
                                  lecture={lecture}
                                  addSelectedLecture={this.props.addSelectedLecture}
                                  selectedLectures={this.props.selectedLectures}
                                  removeSelectedLecture={this.removeSelectedLecture}/>)
    return(
      <ul className={"sectionList-" + this.props.section} id="lecture-list">
        {lectureSections}
      </ul>
    )
  }
}

class LectureSection extends React.Component {
  // constructor(props) {
  //   super(props);
  //   this.toggleLecture = this.toggleLecture.bind(this);
  //   this.state = {
  //     lectureSelected: false
  //   }
  // }

  // toggleLecture() {
  //   this.setState({lectureSelected: !this.state.selected});
  // }

  constructor(props) {
    super(props);
    this.selectLecture = this.selectLecture.bind(this);
  }

  // Check whether the course is already in the selectCourses list.
  // Remove the course if it is, or add the course if it is not.
  selectLecture() {
    this.props.selectedLectures.indexOf(this.props.lecture) != -1 ? this.props.removeSelectedLecture(this.props.lecture) :
                        this.props.addSelectedLecture(this.props.lecture);
  }

  render() {
    return(
      <li id={this.props.lecture.id}
          onClick={this.selectLecture}>
        {this.props.lectureCode}
      </li>
    )
  }
}
